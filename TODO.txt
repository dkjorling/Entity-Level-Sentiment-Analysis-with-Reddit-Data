***TO_DO***
Today goal: FINISH EVERYTHING

1) create table of sentiment types and comment on them

2) Analyze player sentiment

3) Analyze player associations

4) Analyze player in relation to stats


Paper Only
-barchart w testing results for sentiment types
-Total sentiment score for each player, ranked (bar), with line plots of mentions above
-test team/stats % correlation w sentiment for each player + coach/gm/jeanie

Other thingst: 
1) player sent most associated with team wpct
2) player sent most associated w nrtg or other





Stats for  paper
-ent recog went from: 75799 mentions to: 84518 mentions
-interesting: rank from most to least positive: em, base, nm, combined, hl

Paper graphics:

1) Total sentiment score for each player, ranked (bar), with line plots of mentions above
2) Compare test scores for each sentiment type
-sentiment vs popularity
-sentiment vs team performance
-sentiment vs individual performance

Sentiment types [body for 1-4, resolved_final for 5-7]
1) base 					PATH: base	DONE	50451/28309/15258
2) emoji only 					PATH: em	DONE	51182/28094/14741
3) nickname only 				PATH: nm	DONE	50325/28733/14960
4) hoop lex only 				PATH: hl	DONE	49255/28637/16126
5) nicknames + emojis + hoop lexicon + coref 	PATH: nm_em_hl	DONE	49763/29209/15046
6) sent tokenized base 				PATH: stok		41366/26770/25882

TOTAL						PATH: total	DONE	


3) work on visualizations for paper/dash
4) incorporate into dash



Weighing possibilities:
-For sure: posts weight up
-Potential: mentioned in title
-Potential:  ent/total ent
-Potential: sentence proportion mentions
-Potential: upvote/downvote weighting
-Potential: author weighting



***Up next ***

We are changing the text here, not just the lexicon so we need to 1) update the df list text!
# after doing that, test your sentiment results #

2) get sents for new df list and check...if they are better than before these will be the new list
--so far results are slightly worse but close...i want to keep both

After that, we will look into more entity separation and try to get improvement from this angle!
-I think it is reasonable to get a third set of player dfs where nicknames are subbed and new bad/good nickname col that overrides
-from there, we can easily biuld to incorporate multi ent sentiment and hierarchy


***You have to use sentiment w nicknames *****

LIST:
	low: as adverb seems neutral (remove adverb)
	like: anything but verb is neutral (remove non-verb)...14k to 1.5k
	fire: verb, propn generally negative X... noun neutral on avg so delete
		fires = negative (coded) fired = negative (already coded)
	well-> mostly we will...change to neutral, 
	hell-> noun reduce rating X, propn->replace w he will, INTJ-> delete
	limit-> del noun, verb->-1.0 X, 


	
-we can either 1) add new term or 2) delete 3) replace w similar term or reverse term


# other words to look at: fire, 

### before we go any further, lets 1) get sentiment for current sia and 2) test accuracy on posts comparatively
### don't look at context, we will use comments to continue to improve 


# consider: replacing names w entity? seems like lot of work 



look for non-laker entities and try to elimnate any text about them...causing a lot of the misses here

# look into no as negator
# look into 'like' more
# look into 'make' more

#like at beg of sentence maybe delete?

- the best scores came from a thresh of 0.05, incl comments and emojis
- the ONLY other thing we can try is sentence tokenizing but we will explore this in multi-ent/parent ent! good job
 
May4: (rank easiest-> most diff)...anything that is chained should start top to bottom unless top has no ents
-1 ent w/ parent ents
-0 ent, first-level comments that have single ent parent
-0 ent non-first-level comment w single ent parent
-0 ent non-first-level comment w single ent parent2
-multi ent posts
-multi ent comment w 0 ent parents
-0 ent first level comment w multi ent parent
-0 ent non-first-level coment w multi ent parent
-0 ent non-first-level comment w multi ent parent2
-multi ent comment w 1 ent parent

# look into pronouns....we/us vs they


* figure out posts/comments weighting scaled 



## for multi-entity sentiment, isolate the entity we want only ##
-sentence tokenize everything
-get overall sentiment ratings for single entity posts


How do I deal w number of posts? ... should popularity be separate thing?



START:
1) posts with single entity
2) posts w multi entity
3) comments w no thread/parent entities that have entities itself


-start w posts with a single named entity...this is easiest



-one problem: not identifying when separate sentiment and multiple entities
--potential solution: sentence tokenize and analyze on sentence by sentence basis....probably necessary to at least try it
--requires us to leave in punctuation...all other columns can stay should just update body columns
-- if more sentences mentioned, more weight to that player

*****THOUGHT********
The challenges of the sensitivity analysis are twofold:
1) distinguishing sentiment of individuals mentioned in same post
	a) idea: tokenize into sentences if mentioned different sentences, else take sentiment of that sentence
2) training in specific lexicon, that is sports, specifically nba, and social media
	b) use the specific name reference to add context!!!***


## emojis ##
https://towardsdatascience.com/emojis-aid-social-media-sentiment-analysis-stop-cleaning-them-out-bb32a1e5fc8e

## we have options for emoji utilization ##
1) find a sentiment model that allows emojis to be passed as tokens
2) replace emojis w descriptions
3) concatenate to end of post/tweet/sentence
4) treat as metadata, use sentiment lexicon rankings to layer in, while training text with no emojis

*twitter roberta can directly take in emojis and perform well*
*vader sentiment also seems very good.....*
 





